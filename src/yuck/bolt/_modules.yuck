(defwidget _boltdate [day short_pretty]
  (box :hexpand true :halign "start" :orientation "vertical" 
       :space-evenly false :class "bolt-date-box"
    (label :halign "start" :text short_pretty :class "bolt-date-pretty")
    (label :halign "start" :text day :class "bolt-date-day")))

(defwidget _fluidbat [label icon_full icon_crit icon_norm class]
  (overlay :class "bolt-bat-overlay"
    (progress :width 180 :class "bolt-bat-prog ${class}" :value {EWW_BATTERY.BAT0.capacity > 95 ? 100 : EWW_BATTERY.BAT0.capacity})
    (box :valign "center" :spacing 5 :space-evenly false :class "bolt-bat-prog-box"
      (box :halign "start" :hexpand true :orientation "vertical" :space-evenly false :class "bolt-bat-label-box"
        (label :halign "start" :text label :class "bolt-bat-label")
        (label :halign "start" :text "${EWW_BATTERY.BAT0.capacity}%" :class "bolt-bat-status-label"))
      (label :halign "end" :text {EWW_BATTERY.BAT0.capacity > 95 ? icon_full : EWW_BATTERY.BAT0.capacity < 20 ? icon_crit : icon_norm} 
             :class "bolt-bat-icon"))))

(defwidget _boltpctl [cover label title artist volume volume_icon status_cmd status_icon]
  (box :hexpand true :halign "start" :orientation "vertical" :space-evenly false :class "bolt-pctl-box" 
       :style "background-image: radial-gradient(circle farthest-side at bottom, rgba(23, 28, 33, 0.7) 100%), url(\"${pctl_sub['mpris:artUrl']}\")"
       :width 200
       :height 200
    (box :space-evenly false :orientation "vertical" :class "bolt-pctl-label-title-artist"
      (label :halign "start" :text label :class "bolt-pctl-label")
      (label :halign "start" :limit-width 20 :wrap true :xalign 0.5 :text title :class "bolt-pctl-title")
      (label :halign "start" :limit-width 20 :text artist :class "bolt-pctl-artist"))
    (box :vexpand true :valign "end" :hexpand true :space-evenly false :class "bolt-pctl-status-volume-box"
      (box :space-evenly false :spacing 5 :class "bolt-pctl-volume"
        (label :text volume_icon :class "bolt-pctl-volume-icon")
        (label :text volume :class "bolt-pctl-volume-label"))
      (button :hexpand true :halign "end" :onclick status_cmd :class "bolt-pctl-status" status_icon))))

(defwidget _boltuptime [label uptime]
  (box :space-evenly false :class "bolt-uptime-box" :spacing 8 :halign "start"
    (label :text "" :class "bolt-uptime-hl")
    (box :valign "center" :orientation "vertical" :class "bolt-uptime-label-value" :space-evenly false
      (label :halign "start" :class "bolt-uptime-label" :text label)
      (label :limit-width 15 :halign "start" :class "bolt-uptime-value" :text uptime))))

(defwidget _boltwifi [label icon ssid]
  (box :valign "center" :hexpand true :space-evenly false :class "bolt-wifi-box"
    (box :hexpand true :orientation "vertical" :space-evenly false :class "bolt-wifi-label-ssid"
      (label :halign "start" :class "bolt-wifi-label" :text label)
      (label :halign "start" :class "bolt-wifi-ssid" :text ssid))
    (label :halign "end" :class "bolt-wifi-icon" :text icon)))

; vim:ft=yuck
